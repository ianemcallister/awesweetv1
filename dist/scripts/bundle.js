config.$inject=["$routeProvider","$locationProvider"];var awesweet=angular.module("awesweet",["ngRoute","ngSanitize","ui.bootstrap"]);function cartPageController(r,n,l){var a=this;a.items=["item1","item2","item3"],a.animationsEnabled=!0,a.open=function(e,t){var o=t?angular.element(l[0].querySelector(".modal-demo "+t)):void 0;r.open({animation:a.animationsEnabled,ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",controllerAs:"vm",size:e,appendTo:o,resolve:{items:function(){return a.items}}}).result.then(function(e){a.selected=e},function(){n.info("Modal dismissed at: "+new Date)})},a.openComponentModal=function(){r.open({animation:a.animationsEnabled,component:"modalComponent",resolve:{items:function(){return a.items}}}).result.then(function(e){a.selected=e},function(){n.info("modal-component dismissed at: "+new Date)})},n.info("in the cart controller"),a.open("lg")}function ModalInstanceCtrl(e,t){var o=this;o.items=t,o.selected={item:o.items[0]},o.ok=function(){e.close(o.selected.item)},o.cancel=function(){e.dismiss("cancel")}}function channelsPageController(e,t){t.info("in the channels controller")}function checkoutPageController(e,t,o){t.info("in the checkout controller",o)}function dashboardPageController(e,t){t.info("in the dashboard controller")}function jobsPageController(e,t){t.info("in the jobs controller")}function landingPageController(e,t){t.info("in the landing controller")}function loginPageController(e,t){t.info("in the login controller")}function pricingPageController(e,t){t.info("in the pricing controller")}function productPageController(e,t,o,r){t.info("in the products controller")}function reviewsPageController(e,t){t.info("in the reviews controller")}function storyPageController(e,t){t.info("in the story controller")}function supportPageController(e,t){t.info("in the support controller")}function teamChecklistsPageController(e,t,o){t.info("in the team checklists controller",o)}function teamPageController(e,t,o){var r=this;r.activeChecklists=[{title:"Kit #2 Checkout",dueDate:"05/01/19",assignedTo:"Ian McAllister",type:"Equipment Checkout",for:"Kit #1",url:"/team/checklists/equipment"},{title:"Kit #3 Checkout",dueDate:"05/01/19",assignedTo:"",type:"",destination:""}],r.completedChecklists=[{title:"Kit #1 Checkout",shipDate:"05/01/19"}],r.listClicked=function(e){console.log("redirecting to",r.activeChecklists[e].url),o.path(r.activeChecklists[e].url)},t.info("in the team controller")}function dataService(e){return{GETproductData:function(e){return{title:"Swalty Pecans",subtitle:"Our Most Popular Sweet & Salty Pecan Recipe",producer:"Ah-Nuts!",variations:{"ec4eb5e0-4512-11e9-acb8-d5c1e807b1b1":{price:999,unit:"for a 5oz Bag",weight:5,channel:"online"},"7c99a510-4513-11e9-80a3-2d488ae95193":{price:1599,unit:"for 2x 5oz Bags",weight:10,channel:"online"},"80ce9c30-4513-11e9-bd22-bb85ad32a990":{price:2599,unit:"for 4x 5oz Bags",weight:20,channel:"online"},"84c32ef0-4513-11e9-93b5-91165e35a5e9":{price:2999,unit:"for 5x 5oz Bags",weight:25,channel:"online"},"8926d730-4513-11e9-8b89-8f7a19e9776a":{price:3999,unit:"for 7x 5oz Bags",weight:35,channel:"online"},"8de3ea10-4513-11e9-8337-d755c0c18e40":{price:4999,unit:"for 9x 5oz Bags",weight:45,channel:"online"}},defaultVariation:"7c99a510-4513-11e9-80a3-2d488ae95193",discription:"Sweet Pecans roasted and glazed in our world famous secret recipe glaze - the perfect combination of sweet vanilla with a hint of saltiness. Mmmmm!",suggestions:"Great as a stand alone snack or chop them up and use them as a topping for ice cream, yogurt, salads and more!",rte:"Pecans, Sugar, Vanilla, Sea Salt.",certifications:{"01":"Vegan","02":"Gluten Free","03":"Contains Tree Nuts"},brandLogoUrl:"https://s3-us-west-2.amazonaws.com/awe-sweet-assets/logos/Ah-nuts_logo.png",productShotUrls:{"01":"https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/SR-pecans-ps01.png","02":"https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/SR-pecans-ps02.png","03":"https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/SR-pecans-ps03.png"},productShotArray:["https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/SR-pecans-ps01.png","https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/SR-pecans-ps02.png","https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/SR-pecans-ps03.png"],productThumbsUrls:{"01":"https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/thumbs/SR-pecans-ps03-thumb.png","02":"https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/thumbs/SR-pecans-ps03-thumb.png","03":"https://s3-us-west-2.amazonaws.com/awe-sweet-assets/products/thumbs/SR-pecans-ps03-thumb.png"}}}}}function footerDirective(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/footer-view.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}function o(e,t){t.info("in footer directive controller")}return o.$inject=["$scope","$log"],e}function landingChannelsBannerDirective(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/landingChannelsBanner-view.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}function o(e,t){t.info("in landing channels banner directive controller")}return o.$inject=["$scope","$log"],e}function landingHeroBannerDirective(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/landingHeroBanner-view.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}function o(e,t){t.info("in landing hero banner directive controller")}return o.$inject=["$scope","$log"],e}function landingReviewsSliderDirective(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/landingReviewsSlider-view.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}function o(e,t){t.info("in landing reviews slider directive controller")}return o.$inject=["$scope","$log"],e}function navbarDirective(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/navbar-view.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}function o(e,t){this.isNavCollapsed=!0,this.isCollapsed=!1,this.isCollapsedHorizontal=!1,t.info("in navbar directive controller")}return o.$inject=["$scope","$log"],e}function templateProductDirective(){t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/templateProduct-view.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};function t(e,t,o,r){}function o(e,t,o,r){var n,l=this,a=0;l.productModel=r.GETproductData(o.productId),l.selectedVariant=l.productModel.defaultVariation,l.slides=[],console.log("in template product directive controller",l.productId),t.info("product model",l.productModel,l.slides);for(var i=0;i<3;i++)n=l.productModel.productShotArray[i],l.slides.push({image:n,text:"just a test",id:a++})}return o.$inject=["$scope","$log","$routeParams","dataService"],e}function config(e,t){t.hashPrefix(""),e.when("/",{templateUrl:"views/landing-page.htm",controller:"landingPageController",controllerAs:"vm"}).when("/products",{templateUrl:"views/products-page.htm",controller:"productPageController",controllerAs:"vm"}).when("/products/:productName/:productId",{templateUrl:"views/products-page.htm",controller:"productPageController",controllerAs:"vm"}).when("/products/:productId",{templateUrl:"views/products-page.htm",controller:"productPageController",controllerAs:"vm"}).when("/pricing",{templateUrl:"views/pricing-page.htm",controller:"pricingPageController",controllerAs:"vm"}).when("/story",{templateUrl:"views/story-page.htm",controller:"storyPageController",controllerAs:"vm"}).when("/channels",{templateUrl:"views/channels-page.htm",controller:"channelsPageController",controllerAs:"vm"}).when("/channels/:channelId",{templateUrl:"views/channels-page.htm",controller:"channelsPageController",controllerAs:"vm"}).when("/support",{templateUrl:"views/support-page.htm",controller:"supportPageController",controllerAs:"vm"}).when("/reviews",{templateUrl:"views/reviews-page.htm",controller:"reviewsPageController",controllerAs:"vm"}).when("/jobs",{templateUrl:"views/jobs-page.htm",controller:"jobsPageController",controllerAs:"vm"}).when("/cart",{templateUrl:"views/cart-page.htm",controller:"cartPageController",controllerAs:"vm"}).when("/checkout",{templateUrl:"views/checkout-page.htm",controller:"checkoutPageController",controllerAs:"vm"}).when("/checkout/:sessionId",{templateUrl:"views/checkout-page.htm",controller:"checkoutPageController",controllerAs:"vm"}).when("/checkout/:sessionId/:ticketId",{templateUrl:"views/checkout-page.htm",controller:"checkoutPageController",controllerAs:"vm"}).when("/login",{templateUrl:"views/login-page.htm",controller:"loginPageController",controllerAs:"vm"}).when("/dashboard",{templateUrl:"views/dashboard-page.htm",controller:"dashboardPageController",controllerAs:"vm"}).when("/team",{templateUrl:"views/team-page.htm",controller:"teamPageController",controllerAs:"vm"}).when("/team/checklists/:type",{templateUrl:"views/teamChecklists-page.htm",controller:"teamChecklistsPageController",controllerAs:"vm"}).otherwise({redirectTo:"/"})}angular.module("awesweet").controller("cartPageController",cartPageController),cartPageController.$inject=["$uibModal","$log","$document"],angular.module("awesweet").controller("ModalInstanceCtrl",ModalInstanceCtrl),ModalInstanceCtrl.$inject=["$uibModalInstance","items"],angular.module("awesweet").controller("channelsPageController",channelsPageController),channelsPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("checkoutPageController",checkoutPageController),checkoutPageController.$inject=["$scope","$log","$routeParams"],angular.module("awesweet").controller("dashboardPageController",dashboardPageController),dashboardPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("jobsPageController",jobsPageController),jobsPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("landingPageController",landingPageController),landingPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("loginPageController",loginPageController),loginPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("pricingPageController",pricingPageController),pricingPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("productPageController",productPageController),productPageController.$inject=["$scope","$log","$routeParams","dataService"],angular.module("awesweet").controller("reviewsPageController",reviewsPageController),reviewsPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("storyPageController",storyPageController),storyPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("supportPageController",supportPageController),supportPageController.$inject=["$scope","$log"],angular.module("awesweet").controller("teamChecklistsPageController",teamChecklistsPageController),teamChecklistsPageController.$inject=["$scope","$log","$routeParams"],angular.module("awesweet").controller("teamPageController",teamPageController),teamPageController.$inject=["$scope","$log","$location"],angular.module("awesweet").factory("dataService",dataService),dataService.$inject=["$http"],angular.module("awesweet").directive("footerDirective",footerDirective),angular.module("awesweet").directive("landingChannelsBannerDirective",landingChannelsBannerDirective),angular.module("awesweet").directive("landingHeroBannerDirective",landingHeroBannerDirective),angular.module("awesweet").directive("landingReviewsSliderDirective",landingReviewsSliderDirective),angular.module("awesweet").directive("navbarDirective",navbarDirective),angular.module("awesweet").directive("templateProductDirective",templateProductDirective),angular.module("awesweet").config(config);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMvd2ViYXBwLmpzIiwic2NyaXB0cy9jb250cm9sbGVycy9jYXJ0LWNvbnRyb2xsZXIuanMiLCJzY3JpcHRzL2NvbnRyb2xsZXJzL2NoYW5uZWxzLWNvbnRyb2xsZXIuanMiLCJzY3JpcHRzL2NvbnRyb2xsZXJzL2NoZWNrb3V0LWNvbnRyb2xsZXIuanMiLCJzY3JpcHRzL2NvbnRyb2xsZXJzL2Rhc2hib2FyZC1jb250cm9sbGVyLmpzIiwic2NyaXB0cy9jb250cm9sbGVycy9qb2JzLWNvbnRyb2xsZXIuanMiLCJzY3JpcHRzL2NvbnRyb2xsZXJzL2xhbmRpbmctY29udHJvbGxlci5qcyIsInNjcmlwdHMvY29udHJvbGxlcnMvbG9naW4tY29udHJvbGxlci5qcyIsInNjcmlwdHMvY29udHJvbGxlcnMvcHJpY2luZy1jb250cm9sbGVyLmpzIiwic2NyaXB0cy9jb250cm9sbGVycy9wcm9kdWN0cy1jb250cm9sbGVyLmpzIiwic2NyaXB0cy9jb250cm9sbGVycy9yZXZpZXdzLWNvbnRyb2xsZXIuanMiLCJzY3JpcHRzL2NvbnRyb2xsZXJzL3N0b3J5LWNvbnRyb2xsZXIuanMiLCJzY3JpcHRzL2NvbnRyb2xsZXJzL3N1cHBvcnQtY29udHJvbGxlci5qcyIsInNjcmlwdHMvY29udHJvbGxlcnMvdGVhbS1jaGVja2xpc3RzLWNvbnRyb2xsZXIuanMiLCJzY3JpcHRzL2NvbnRyb2xsZXJzL3RlYW0tY29udHJvbGxlci5qcyIsInNjcmlwdHMvZmFjdG9yaWVzL2RhdGEtc2VydmljZS5qcyIsInNjcmlwdHMvZGlyZWN0aXZlcy9mb290ZXItZGlyZWN0aXZlLmpzIiwic2NyaXB0cy9kaXJlY3RpdmVzL2xhbmRpbmdDaGFubmVsc0Jhbm5lci1kaXJlY3RpdmUuanMiLCJzY3JpcHRzL2RpcmVjdGl2ZXMvbGFuZGluZ0hlcm9CYW5uZXItZGlyZWN0aXZlLmpzIiwic2NyaXB0cy9kaXJlY3RpdmVzL2xhbmRpbmdSZXZpZXdzU2xpZGVyLWRpcmVjdGl2ZS5qcyIsInNjcmlwdHMvZGlyZWN0aXZlcy9uYXZiYXItZGlyZWN0aXZlLmpzIiwic2NyaXB0cy9kaXJlY3RpdmVzL3RlbXBsYXRlUHJvZHVjdC1kaXJlY3RpdmUuanMiLCJzY3JpcHRzL3JvdXRlcy9yb3V0ZXMtY29uZmlnLmpzIl0sIm5hbWVzIjpbImF3ZXN3ZWV0IiwiYW5ndWxhciIsIm1vZHVsZSIsImNhcnRQYWdlQ29udHJvbGxlciIsIiR1aWJNb2RhbCIsIiRsb2ciLCIkZG9jdW1lbnQiLCJ2bSIsInRoaXMiLCJpdGVtcyIsImFuaW1hdGlvbnNFbmFibGVkIiwib3BlbiIsInNpemUiLCJwYXJlbnRTZWxlY3RvciIsInBhcmVudEVsZW0iLCJlbGVtZW50IiwicXVlcnlTZWxlY3RvciIsInVuZGVmaW5lZCIsImFuaW1hdGlvbiIsImFyaWFMYWJlbGxlZEJ5IiwiYXJpYURlc2NyaWJlZEJ5IiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwiYXBwZW5kVG8iLCJyZXNvbHZlIiwicmVzdWx0IiwidGhlbiIsInNlbGVjdGVkSXRlbSIsInNlbGVjdGVkIiwiaW5mbyIsIkRhdGUiLCJvcGVuQ29tcG9uZW50TW9kYWwiLCJjb21wb25lbnQiLCJNb2RhbEluc3RhbmNlQ3RybCIsIiR1aWJNb2RhbEluc3RhbmNlIiwiaXRlbSIsIm9rIiwiY2xvc2UiLCJjYW5jZWwiLCJkaXNtaXNzIiwiY2hhbm5lbHNQYWdlQ29udHJvbGxlciIsIiRzY29wZSIsImNoZWNrb3V0UGFnZUNvbnRyb2xsZXIiLCIkcm91dGVQYXJhbXMiLCJkYXNoYm9hcmRQYWdlQ29udHJvbGxlciIsImpvYnNQYWdlQ29udHJvbGxlciIsImxhbmRpbmdQYWdlQ29udHJvbGxlciIsImxvZ2luUGFnZUNvbnRyb2xsZXIiLCJwcmljaW5nUGFnZUNvbnRyb2xsZXIiLCJwcm9kdWN0UGFnZUNvbnRyb2xsZXIiLCJkYXRhU2VydmljZSIsInJldmlld3NQYWdlQ29udHJvbGxlciIsInN0b3J5UGFnZUNvbnRyb2xsZXIiLCJzdXBwb3J0UGFnZUNvbnRyb2xsZXIiLCJ0ZWFtQ2hlY2tsaXN0c1BhZ2VDb250cm9sbGVyIiwidGVhbVBhZ2VDb250cm9sbGVyIiwiJGxvY2F0aW9uIiwiYWN0aXZlQ2hlY2tsaXN0cyIsInRpdGxlIiwiZHVlRGF0ZSIsImFzc2lnbmVkVG8iLCJ0eXBlIiwiZm9yIiwidXJsIiwiZGVzdGluYXRpb24iLCJjb21wbGV0ZWRDaGVja2xpc3RzIiwic2hpcERhdGUiLCJsaXN0Q2xpY2tlZCIsImluZGV4IiwiY29uc29sZSIsImxvZyIsInBhdGgiLCIkaHR0cCIsIkdFVHByb2R1Y3REYXRhIiwiaWQiLCJzdWJ0aXRsZSIsInByb2R1Y2VyIiwidmFyaWF0aW9ucyIsImVjNGViNWUwLTQ1MTItMTFlOS1hY2I4LWQ1YzFlODA3YjFiMSIsInByaWNlIiwidW5pdCIsIndlaWdodCIsImNoYW5uZWwiLCI3Yzk5YTUxMC00NTEzLTExZTktODBhMy0yZDQ4OGFlOTUxOTMiLCI4MGNlOWMzMC00NTEzLTExZTktYmQyMi1iYjg1YWQzMmE5OTAiLCI4NGMzMmVmMC00NTEzLTExZTktOTNiNS05MTE2NWUzNWE1ZTkiLCI4OTI2ZDczMC00NTEzLTExZTktOGI4OS04ZjdhMTllOTc3NmEiLCI4ZGUzZWExMC00NTEzLTExZTktODMzNy1kNzU1YzBjMThlNDAiLCJkZWZhdWx0VmFyaWF0aW9uIiwiZGlzY3JpcHRpb24iLCJzdWdnZXN0aW9ucyIsInJ0ZSIsImNlcnRpZmljYXRpb25zIiwiMDEiLCIwMiIsIjAzIiwiYnJhbmRMb2dvVXJsIiwicHJvZHVjdFNob3RVcmxzIiwicHJvZHVjdFNob3RBcnJheSIsInByb2R1Y3RUaHVtYnNVcmxzIiwiZm9vdGVyRGlyZWN0aXZlIiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJyZXBsYWNlIiwic2NvcGUiLCJsaW5rIiwibGlua0Z1bmMiLCJmb290ZXJEaXJlY3RpdmVDb250cm9sbGVyIiwiYmluZFRvQ29udHJvbGxlciIsImVsIiwiYXR0ciIsImN0cmwiLCIkaW5qZWN0IiwibGFuZGluZ0NoYW5uZWxzQmFubmVyRGlyZWN0aXZlIiwibGFuZGluZ0NoYW5uZWxzQmFubmVyRGlyZWN0aXZlQ29udHJvbGxlciIsImxhbmRpbmdIZXJvQmFubmVyRGlyZWN0aXZlIiwibGFuZGluZ0hlcm9CYW5uZXJEaXJlY3RpdmVDb250cm9sbGVyIiwibGFuZGluZ1Jldmlld3NTbGlkZXJEaXJlY3RpdmUiLCJsYW5kaW5nUmV2aWV3c1NsaWRlckRpcmVjdGl2ZUNvbnRyb2xsZXIiLCJuYXZiYXJEaXJlY3RpdmUiLCJuYXZiYXJEaXJlY3RpdmVDb250cm9sbGVyIiwiaXNOYXZDb2xsYXBzZWQiLCJpc0NvbGxhcHNlZCIsImlzQ29sbGFwc2VkSG9yaXpvbnRhbCIsInRlbXBsYXRlUHJvZHVjdERpcmVjdGl2ZSIsInRlbXBsYXRlUHJvZHVjdERpcmVjdGl2ZUNvbnRyb2xsZXIiLCJjdXJySW5kZXgiLCJwcm9kdWN0TW9kZWwiLCJwcm9kdWN0SWQiLCJzZWxlY3RlZFZhcmlhbnQiLCJzbGlkZXMiLCJpIiwicHVzaCIsImltYWdlIiwidGV4dCIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCJoYXNoUHJlZml4Iiwid2hlbiIsIm90aGVyd2lzZSIsInJlZGlyZWN0VG8iLCJmYWN0b3J5Il0sIm1hcHBpbmdzIjoic0RBQ0EsSUFBQUEsU0FBQUMsUUFBQUMsT0FBQSxXQUFBLENBQUEsVUFBQSxhQUFBLGlCQ01BLFNBQUFDLG1CQUFBQyxFQUFBQyxFQUFBQyxHQUdBLElBQUFDLEVBQUFDLEtBR0FELEVBQUFFLE1BQUEsQ0FBQSxRQUFBLFFBQUEsU0FDQUYsRUFBQUcsbUJBQUEsRUFDQUgsRUFBQUksS0FBQSxTQUFBQyxFQUFBQyxHQUNBLElBQUFDLEVBQUFELEVBQ0FaLFFBQUFjLFFBQUFULEVBQUEsR0FBQVUsY0FBQSxlQUFBSCxTQUFBSSxFQUNBYixFQUFBTyxLQUFBLENBQ0FPLFVBQUFYLEVBQUFHLGtCQUNBUyxlQUFBLGNBQ0FDLGdCQUFBLGFBQ0FDLFlBQUEsc0JBQ0FDLFdBQUEsb0JBQ0FD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QUEsU0NMQWhILFFBQ0FDLE9BQUEsWUFDQW9HLFVBQUEsa0JBQUFELGlCQ0ZBcEcsUUFDQUMsT0FBQSxZQUNBb0csVUFBQSxpQ0FBQVksZ0NDRkFqSCxRQUNBQyxPQUFBLFlBQ0FvRyxVQUFBLDZCQUFBYyw0QkNGQW5ILFFBQ0FDLE9BQUEsWUFDQW9HLFVBQUEsZ0NBQUFnQiwrQkNGQXJILFFBQ0FDLE9BQUEsWUFDQW9HLFVBQUEsa0JBQUFrQixpQkNGQXZILFFBQ0FDLE9BQUEsWUFDQW9HLFVBQUEsMkJBQUF1QiwwQkNIQTVILFFBQ0FDLE9BQUEsWUFDQXNJLE9BQUFBIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIE1PRFVMRVxudmFyIGF3ZXN3ZWV0ID0gYW5ndWxhci5tb2R1bGUoJ2F3ZXN3ZWV0JywgWyduZ1JvdXRlJywgJ25nU2FuaXRpemUnLCAndWkuYm9vdHN0cmFwJ10pO1xuIiwiYW5ndWxhclxuICAgIC5tb2R1bGUoJ2F3ZXN3ZWV0JylcbiAgICAuY29udHJvbGxlcignY2FydFBhZ2VDb250cm9sbGVyJywgY2FydFBhZ2VDb250cm9sbGVyKTtcblxuXHRjYXJ0UGFnZUNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHVpYk1vZGFsJywnJGxvZycsICckZG9jdW1lbnQnXTtcblxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBjYXJ0UGFnZUNvbnRyb2xsZXIoJHVpYk1vZGFsLCAkbG9nLCAkZG9jdW1lbnQpIHtcblxuXHQvL1x0REVGSU5FIExPQ0FMIFZBUklBQkxFU1xuXHR2YXIgdm0gPSB0aGlzO1xuXG5cdC8vXHRERUZJTkUgVklFVyBNT0RFTCBWQVJJQUJMRVNcblx0dm0uaXRlbXMgPSBbJ2l0ZW0xJywgJ2l0ZW0yJywgJ2l0ZW0zJ107XG5cdHZtLmFuaW1hdGlvbnNFbmFibGVkID0gdHJ1ZTtcblx0dm0ub3BlbiA9IGZ1bmN0aW9uIChzaXplLCBwYXJlbnRTZWxlY3Rvcikge1xuXHRcdHZhciBwYXJlbnRFbGVtID0gcGFyZW50U2VsZWN0b3IgPyBcblx0XHQgIGFuZ3VsYXIuZWxlbWVudCgkZG9jdW1lbnRbMF0ucXVlcnlTZWxlY3RvcignLm1vZGFsLWRlbW8gJyArIHBhcmVudFNlbGVjdG9yKSkgOiB1bmRlZmluZWQ7XG5cdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkdWliTW9kYWwub3Blbih7XG5cdFx0ICBhbmltYXRpb246IHZtLmFuaW1hdGlvbnNFbmFibGVkLFxuXHRcdCAgYXJpYUxhYmVsbGVkQnk6ICdtb2RhbC10aXRsZScsXG5cdFx0ICBhcmlhRGVzY3JpYmVkQnk6ICdtb2RhbC1ib2R5Jyxcblx0XHQgIHRlbXBsYXRlVXJsOiAnbXlNb2RhbENvbnRlbnQuaHRtbCcsXG5cdFx0ICBjb250cm9sbGVyOiAnTW9kYWxJbnN0YW5jZUN0cmwnLFxuXHRcdCAgY29udHJvbGxlckFzOiAndm0nLFxuXHRcdCAgc2l6ZTogc2l6ZSxcblx0XHQgIGFwcGVuZFRvOiBwYXJlbnRFbGVtLFxuXHRcdCAgcmVzb2x2ZToge1xuXHRcdFx0aXRlbXM6IGZ1bmN0aW9uICgpIHtcblx0XHRcdCAgcmV0dXJuIHZtLml0ZW1zO1xuXHRcdFx0fVxuXHRcdCAgfVxuXHRcdH0pO1xuXG5cdFx0bW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbiAoc2VsZWN0ZWRJdGVtKSB7XG5cdFx0XHR2bS5zZWxlY3RlZCA9IHNlbGVjdGVkSXRlbTtcblx0XHQgIH0sIGZ1bmN0aW9uICgpIHtcblx0XHRcdCRsb2cuaW5mbygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7XG5cdFx0ICB9KTtcblx0fTtcblxuXHR2bS5vcGVuQ29tcG9uZW50TW9kYWwgPSBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIG1vZGFsSW5zdGFuY2UgPSAkdWliTW9kYWwub3Blbih7XG5cdFx0ICBhbmltYXRpb246IHZtLmFuaW1hdGlvbnNFbmFibGVkLFxuXHRcdCAgY29tcG9uZW50OiAnbW9kYWxDb21wb25lbnQnLFxuXHRcdCAgcmVzb2x2ZToge1xuXHRcdFx0aXRlbXM6IGZ1bmN0aW9uICgpIHtcblx0XHRcdCAgcmV0dXJuIHZtLml0ZW1zO1xuXHRcdFx0fVxuXHRcdCAgfVxuXHRcdH0pO1xuXHRcblx0XHRtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uIChzZWxlY3RlZEl0ZW0pIHtcblx0XHQgIHZtLnNlbGVjdGVkID0gc2VsZWN0ZWRJdGVtO1xuXHRcdH0sIGZ1bmN0aW9uICgpIHtcblx0XHQgICRsb2cuaW5mbygnbW9kYWwtY29tcG9uZW50IGRpc21pc3NlZCBhdDogJyArIG5ldyBEYXRlKCkpO1xuXHRcdH0pO1xuXHR9O1xuXG5cblxuXHQkbG9nLmluZm8oJ2luIHRoZSBjYXJ0IGNvbnRyb2xsZXInKTtcdCAgICAvLyAgVE9ETzogVEFLRSBUSElTIE9VVCBMQVRFUlxuXG5cdHZtLm9wZW4oJ2xnJyk7XG59XG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdhd2Vzd2VldCcpXG4gICAgLmNvbnRyb2xsZXIoJ01vZGFsSW5zdGFuY2VDdHJsJywgTW9kYWxJbnN0YW5jZUN0cmwpO1xuXG5cdE1vZGFsSW5zdGFuY2VDdHJsLiRpbmplY3QgPSBbJyR1aWJNb2RhbEluc3RhbmNlJywnaXRlbXMnXTtcblxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBNb2RhbEluc3RhbmNlQ3RybCgkdWliTW9kYWxJbnN0YW5jZSwgaXRlbXMpIHtcblx0dmFyIHZtID0gdGhpcztcblx0dm0uaXRlbXMgPSBpdGVtcztcblx0dm0uc2VsZWN0ZWQgPSB7XG5cdCAgaXRlbTogdm0uaXRlbXNbMF1cblx0fTtcbiAgXG5cdHZtLm9rID0gZnVuY3Rpb24gKCkge1xuXHQgICR1aWJNb2RhbEluc3RhbmNlLmNsb3NlKHZtLnNlbGVjdGVkLml0ZW0pO1xuXHR9O1xuICBcblx0dm0uY2FuY2VsID0gZnVuY3Rpb24gKCkge1xuXHQgICR1aWJNb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuXHR9O1xufSIsImFuZ3VsYXJcbiAgICAubW9kdWxlKCdhd2Vzd2VldCcpXG4gICAgLmNvbnRyb2xsZXIoJ2NoYW5uZWxzUGFnZUNvbnRyb2xsZXInLCBjaGFubmVsc1BhZ2VDb250cm9sbGVyKTtcblxuXHRjaGFubmVsc1BhZ2VDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsJyRsb2cnXTtcblxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBjaGFubmVsc1BhZ2VDb250cm9sbGVyKCRzY29wZSwgJGxvZykge1xuXG5cdC8vZGVmaW5lIHZpZXcgbW9kZWwgdmFyaWFibGVcblx0dmFyIHZtID0gdGhpcztcblxuXHQkbG9nLmluZm8oJ2luIHRoZSBjaGFubmVscyBjb250cm9sbGVyJyk7XHQgICAgLy8gIFRPRE86IFRBS0UgVEhJUyBPVVQgTEFURVJcblxuXG59IiwiYW5ndWxhclxuICAgIC5tb2R1bGUoJ2F3ZXN3ZWV0JylcbiAgICAuY29udHJvbGxlcignY2hlY2tvdXRQYWdlQ29udHJvbGxlcicsIGNoZWNrb3V0UGFnZUNvbnRyb2xsZXIpO1xuXG5cdGNoZWNrb3V0UGFnZUNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHNjb3BlJywnJGxvZycsICckcm91dGVQYXJhbXMnXTtcblxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBjaGVja291dFBhZ2VDb250cm9sbGVyKCRzY29wZSwgJGxvZywgJHJvdXRlUGFyYW1zKSB7XG5cblx0Ly9kZWZpbmUgdmlldyBtb2RlbCB2YXJpYWJsZVxuXHR2YXIgdm0gPSB0aGlzO1xuXG5cdCRsb2cuaW5mbygnaW4gdGhlIGNoZWNrb3V0IGNvbnRyb2xsZXInLCAkcm91dGVQYXJhbXMpO1x0ICAgIC8vICBUT0RPOiBUQUtFIFRISVMgT1VUIExBVEVSXG5cblxufSIsImFuZ3VsYXJcbiAgICAubW9kdWxlKCdhd2Vzd2VldCcpXG4gICAgLmNvbnRyb2xsZXIoJ2Rhc2hib2FyZFBhZ2VDb250cm9sbGVyJywgZGFzaGJvYXJkUGFnZUNvbnRyb2xsZXIpO1xuXG5cdGRhc2hib2FyZFBhZ2VDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsJyRsb2cnXTtcblxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBkYXNoYm9hcmRQYWdlQ29udHJvbGxlcigkc2NvcGUsICRsb2cpIHtcblxuXHQvL2RlZmluZSB2aWV3IG1vZGVsIHZhcmlhYmxlXG5cdHZhciB2bSA9IHRoaXM7XG5cblx0JGxvZy5pbmZvKCdpbiB0aGUgZGFzaGJvYXJkIGNvbnRyb2xsZXInKTtcdCAgICAvLyAgVE9ETzogVEFLRSBUSElTIE9VVCBMQVRFUlxuXG5cbn0iLCJhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXdlc3dlZXQnKVxuICAgIC5jb250cm9sbGVyKCdqb2JzUGFnZUNvbnRyb2xsZXInLCBqb2JzUGFnZUNvbnRyb2xsZXIpO1xuXG5cdGpvYnNQYWdlQ29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCckbG9nJ107XG5cbi8qIEBuZ0luamVjdCAqL1xuZnVuY3Rpb24gam9ic1BhZ2VDb250cm9sbGVyKCRzY29wZSwgJGxvZykge1xuXG5cdC8vZGVmaW5lIHZpZXcgbW9kZWwgdmFyaWFibGVcblx0dmFyIHZtID0gdGhpcztcblxuXHQkbG9nLmluZm8oJ2luIHRoZSBqb2JzIGNvbnRyb2xsZXInKTtcdCAgICAvLyAgVE9ETzogVEFLRSBUSElTIE9VVCBMQVRFUlxuXG59IiwiYW5ndWxhclxuICAgIC5tb2R1bGUoJ2F3ZXN3ZWV0JylcbiAgICAuY29udHJvbGxlcignbGFuZGluZ1BhZ2VDb250cm9sbGVyJywgbGFuZGluZ1BhZ2VDb250cm9sbGVyKTtcblxuXHRsYW5kaW5nUGFnZUNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHNjb3BlJywnJGxvZyddO1xuXG4vKiBAbmdJbmplY3QgKi9cbmZ1bmN0aW9uIGxhbmRpbmdQYWdlQ29udHJvbGxlcigkc2NvcGUsICRsb2cpIHtcblxuXHQvL2RlZmluZSB2aWV3IG1vZGVsIHZhcmlhYmxlXG5cdHZhciB2bSA9IHRoaXM7XG5cblx0JGxvZy5pbmZvKCdpbiB0aGUgbGFuZGluZyBjb250cm9sbGVyJyk7XHQgICAgLy8gIFRPRE86IFRBS0UgVEhJUyBPVVQgTEFURVJcblxuXG59XG4iLCJhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXdlc3dlZXQnKVxuICAgIC5jb250cm9sbGVyKCdsb2dpblBhZ2VDb250cm9sbGVyJywgbG9naW5QYWdlQ29udHJvbGxlcik7XG5cblx0bG9naW5QYWdlQ29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCckbG9nJ107XG5cbi8qIEBuZ0luamVjdCAqL1xuZnVuY3Rpb24gbG9naW5QYWdlQ29udHJvbGxlcigkc2NvcGUsICRsb2cpIHtcblxuXHQvL2RlZmluZSB2aWV3IG1vZGVsIHZhcmlhYmxlXG5cdHZhciB2bSA9IHRoaXM7XG5cblx0JGxvZy5pbmZvKCdpbiB0aGUgbG9naW4gY29udHJvbGxlcicpO1x0ICAgIC8vICBUT0RPOiBUQUtFIFRISVMgT1VUIExBVEVSXG5cblxufSIsImFuZ3VsYXJcbiAgICAubW9kdWxlKCdhd2Vzd2VldCcpXG4gICAgLmNvbnRyb2xsZXIoJ3ByaWNpbmdQYWdlQ29udHJvbGxlcicsIHByaWNpbmdQYWdlQ29udHJvbGxlcik7XG5cblx0cHJpY2luZ1BhZ2VDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsJyRsb2cnXTtcblxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBwcmljaW5nUGFnZUNvbnRyb2xsZXIoJHNjb3BlLCAkbG9nKSB7XG5cblx0Ly9kZWZpbmUgdmlldyBtb2RlbCB2YXJpYWJsZVxuXHR2YXIgdm0gPSB0aGlzO1xuXG5cdCRsb2cuaW5mbygnaW4gdGhlIHByaWNpbmcgY29udHJvbGxlcicpO1x0ICAgIC8vICBUT0RPOiBUQUtFIFRISVMgT1VUIExBVEVSXG5cblxufSIsImFuZ3VsYXJcbiAgICAubW9kdWxlKCdhd2Vzd2VldCcpXG4gICAgLmNvbnRyb2xsZXIoJ3Byb2R1Y3RQYWdlQ29udHJvbGxlcicsIHByb2R1Y3RQYWdlQ29udHJvbGxlcik7XG5cblx0cHJvZHVjdFBhZ2VDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsJyRsb2cnLCAnJHJvdXRlUGFyYW1zJywgJ2RhdGFTZXJ2aWNlJ107XG5cbi8qIEBuZ0luamVjdCAqL1xuZnVuY3Rpb24gcHJvZHVjdFBhZ2VDb250cm9sbGVyKCRzY29wZSwgJGxvZywgJHJvdXRlUGFyYW1zLCBkYXRhU2VydmljZSkge1xuXG5cdC8vXHRERUZJTkUgTE9DQUwgVkFSSUFCTEVTXG5cdHZhciB2bSA9IHRoaXM7XG5cdFxuXHQvL1x0REVGSU5FIFZJRVdNT09ERUwgVkFSSUFCTEVTXG5cblx0JGxvZy5pbmZvKCdpbiB0aGUgcHJvZHVjdHMgY29udHJvbGxlcicpO1x0ICAgIC8vICBUT0RPOiBUQUtFIFRISVMgT1VUIExBVEVSXG5cdFxuXG59IiwiYW5ndWxhclxuICAgIC5tb2R1bGUoJ2F3ZXN3ZWV0JylcbiAgICAuY29udHJvbGxlcigncmV2aWV3c1BhZ2VDb250cm9sbGVyJywgcmV2aWV3c1BhZ2VDb250cm9sbGVyKTtcblxuXHRyZXZpZXdzUGFnZUNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHNjb3BlJywnJGxvZyddO1xuXG4vKiBAbmdJbmplY3QgKi9cbmZ1bmN0aW9uIHJldmlld3NQYWdlQ29udHJvbGxlcigkc2NvcGUsICRsb2cpIHtcblxuXHQvL2RlZmluZSB2aWV3IG1vZGVsIHZhcmlhYmxlXG5cdHZhciB2bSA9IHRoaXM7XG5cblx0JGxvZy5pbmZvKCdpbiB0aGUgcmV2aWV3cyBjb250cm9sbGVyJyk7XHQgICAgLy8gIFRPRE86IFRBS0UgVEhJUyBPVVQgTEFURVJcblxuXG59IiwiYW5ndWxhclxuICAgIC5tb2R1bGUoJ2F3ZXN3ZWV0JylcbiAgICAuY29udHJvbGxlcignc3RvcnlQYWdlQ29udHJvbGxlcicsIHN0b3J5UGFnZUNvbnRyb2xsZXIpO1xuXG5cdHN0b3J5UGFnZUNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHNjb3BlJywnJGxvZyddO1xuXG4vKiBAbmdJbmplY3QgKi9cbmZ1bmN0aW9uIHN0b3J5UGFnZUNvbnRyb2xsZXIoJHNjb3BlLCAkbG9nKSB7XG5cblx0Ly9kZWZpbmUgdmlldyBtb2RlbCB2YXJpYWJsZVxuXHR2YXIgdm0gPSB0aGlzO1xuXG5cdCRsb2cuaW5mbygnaW4gdGhlIHN0b3J5IGNvbnRyb2xsZXInKTtcdCAgICAvLyAgVE9ETzogVEFLRSBUSElTIE9VVCBMQVRFUlxuXG5cbn0iLCJhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXdlc3dlZXQnKVxuICAgIC5jb250cm9sbGVyKCdzdXBwb3J0UGFnZUNvbnRyb2xsZXInLCBzdXBwb3J0UGFnZUNvbnRyb2xsZXIpO1xuXG5cdHN1cHBvcnRQYWdlQ29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCckbG9nJ107XG5cbi8qIEBuZ0luamVjdCAqL1xuZnVuY3Rpb24gc3VwcG9ydFBhZ2VDb250cm9sbGVyKCRzY29wZSwgJGxvZykge1xuXG5cdC8vZGVmaW5lIHZpZXcgbW9kZWwgdmFyaWFibGVcblx0dmFyIHZtID0gdGhpcztcblxuXHQkbG9nLmluZm8oJ2luIHRoZSBzdXBwb3J0IGNvbnRyb2xsZXInKTtcdCAgICAvLyAgVE9ETzogVEFLRSBUSElTIE9VVCBMQVRFUlxuXG5cbn0iLCJhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXdlc3dlZXQnKVxuICAgIC5jb250cm9sbGVyKCd0ZWFtQ2hlY2tsaXN0c1BhZ2VDb250cm9sbGVyJywgdGVhbUNoZWNrbGlzdHNQYWdlQ29udHJvbGxlcik7XG5cblx0dGVhbUNoZWNrbGlzdHNQYWdlQ29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCckbG9nJywgJyRyb3V0ZVBhcmFtcyddO1xuXG4vKiBAbmdJbmplY3QgKi9cbmZ1bmN0aW9uIHRlYW1DaGVja2xpc3RzUGFnZUNvbnRyb2xsZXIoJHNjb3BlLCAkbG9nLCAkcm91dGVQYXJhbXMpIHtcblxuXHQvL2RlZmluZSB2aWV3IG1vZGVsIHZhcmlhYmxlXG5cdHZhciB2bSA9IHRoaXM7XG5cblx0JGxvZy5pbmZvKCdpbiB0aGUgdGVhbSBjaGVja2xpc3RzIGNvbnRyb2xsZXInLCAkcm91dGVQYXJhbXMpO1x0ICAgIC8vICBUT0RPOiBUQUtFIFRISVMgT1VUIExBVEVSXG5cblxufSIsImFuZ3VsYXJcbiAgICAubW9kdWxlKCdhd2Vzd2VldCcpXG4gICAgLmNvbnRyb2xsZXIoJ3RlYW1QYWdlQ29udHJvbGxlcicsIHRlYW1QYWdlQ29udHJvbGxlcik7XG5cblx0dGVhbVBhZ2VDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsJyRsb2cnLCAnJGxvY2F0aW9uJ107XG5cbi8qIEBuZ0luamVjdCAqL1xuZnVuY3Rpb24gdGVhbVBhZ2VDb250cm9sbGVyKCRzY29wZSwgJGxvZywgJGxvY2F0aW9uKSB7XG5cblx0Ly9cdERFRklORSBMT0NBTCBWQVJJQUJMRVNcblx0dmFyIHZtID0gdGhpcztcblxuXHQvL1x0REVGSU5FIFZJRVcgTU9ERUwgVkFSSUFCTEVTIFxuXHR2bS5hY3RpdmVDaGVja2xpc3RzID0gW1xuXHRcdHsgdGl0bGU6IFwiS2l0ICMyIENoZWNrb3V0XCIsIGR1ZURhdGU6IFwiMDUvMDEvMTlcIiwgIGFzc2lnbmVkVG86IFwiSWFuIE1jQWxsaXN0ZXJcIiwgdHlwZTogXCJFcXVpcG1lbnQgQ2hlY2tvdXRcIiwgZm9yOlwiS2l0ICMxXCIsIHVybDpcIi90ZWFtL2NoZWNrbGlzdHMvZXF1aXBtZW50XCJ9LFxuXHRcdHsgdGl0bGU6IFwiS2l0ICMzIENoZWNrb3V0XCIsIGR1ZURhdGU6IFwiMDUvMDEvMTlcIiwgIGFzc2lnbmVkVG86IFwiXCIsIHR5cGU6IFwiXCIsIGRlc3RpbmF0aW9uOlwiXCIgfVxuXHRdO1xuXHR2bS5jb21wbGV0ZWRDaGVja2xpc3RzID0gW1xuXHRcdHsgdGl0bGU6IFwiS2l0ICMxIENoZWNrb3V0XCIsIHNoaXBEYXRlOiBcIjA1LzAxLzE5XCJ9XG5cdF1cblxuXHQvL1x0REVGSU5FIFZJRVcgTU9ERUwgRlVOQ1RJT05TXG5cdHZtLmxpc3RDbGlja2VkID0gZnVuY3Rpb24oaW5kZXgpIHtcblx0XHRjb25zb2xlLmxvZygncmVkaXJlY3RpbmcgdG8nLCB2bS5hY3RpdmVDaGVja2xpc3RzW2luZGV4XS51cmwpXG5cdFx0JGxvY2F0aW9uLnBhdGgodm0uYWN0aXZlQ2hlY2tsaXN0c1tpbmRleF0udXJsKTtcblx0fTtcblxuXG5cdCRsb2cuaW5mbygnaW4gdGhlIHRlYW0gY29udHJvbGxlcicpO1x0ICAgIC8vICBUT0RPOiBUQUtFIFRISVMgT1VUIExBVEVSXG5cblxufSIsIi8qXG4qXHRCQUNLRU5EIERBVEEgU0VSVklDRVxuKlxuKi9cblxuLy9kZWZpbmUgbW9kdWxlXG5hbmd1bGFyXG4gICAgLm1vZHVsZSgnYXdlc3dlZXQnKVxuICAgIC5mYWN0b3J5KCdkYXRhU2VydmljZScsIGRhdGFTZXJ2aWNlKTtcblxuLy9kZXBlbmRlbmN5IGluamVjdGlvbnNcbmRhdGFTZXJ2aWNlLiRpbmplY3QgPSBbJyRodHRwJ107XG5cbi8vZGVjbGFyZSB0aGUgc2VydmljZVxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBkYXRhU2VydmljZSgkaHR0cCkge1xuXG5cdC8vZGVmaW5lIG1ldGhvZHNcblx0dmFyIGRhdGFTZXJ2aWNlID0ge1xuICAgICAgICBHRVRwcm9kdWN0RGF0YTogR0VUcHJvZHVjdERhdGFcbiAgICB9O1xuICAgIFxuICAgIC8qXG4gICAgKiAgIEdFVCBQUk9EVUNUIERBVEFcbiAgICAqXG4gICAgKiAgIFRoaXMgcHJvdmlkZXMgdGhlIHByb2R1Y3QgZGF0YSBmcm9tIHRoZSBzZXJ2ZXIuXG4gICAgKi9cbiAgICBmdW5jdGlvbiBHRVRwcm9kdWN0RGF0YShpZCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCJTd2FsdHkgUGVjYW5zXCIsXG4gICAgICAgICAgICAgICAgXCJzdWJ0aXRsZVwiOiBcIk91ciBNb3N0IFBvcHVsYXIgU3dlZXQgJiBTYWx0eSBQZWNhbiBSZWNpcGVcIixcbiAgICAgICAgICAgICAgICBcInByb2R1Y2VyXCI6IFwiQWgtTnV0cyFcIixcbiAgICAgICAgICAgICAgICBcInZhcmlhdGlvbnNcIjoge1xuICAgICAgICAgICAgICAgICAgICBcImVjNGViNWUwLTQ1MTItMTFlOS1hY2I4LWQ1YzFlODA3YjFiMVwiOiB7IFwicHJpY2VcIjogOTk5LCBcInVuaXRcIjogXCJmb3IgYSA1b3ogQmFnXCIsIFwid2VpZ2h0XCI6IDUuMCwgXCJjaGFubmVsXCI6IFwib25saW5lXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgXCI3Yzk5YTUxMC00NTEzLTExZTktODBhMy0yZDQ4OGFlOTUxOTNcIjogeyBcInByaWNlXCI6IDE1OTksIFwidW5pdFwiOiBcImZvciAyeCA1b3ogQmFnc1wiLCBcIndlaWdodFwiOiAxMC4wLCBcImNoYW5uZWxcIjogXCJvbmxpbmVcIiB9LFxuICAgICAgICAgICAgICAgICAgICBcIjgwY2U5YzMwLTQ1MTMtMTFlOS1iZDIyLWJiODVhZDMyYTk5MFwiOiB7IFwicHJpY2VcIjogMjU5OSwgXCJ1bml0XCI6IFwiZm9yIDR4IDVveiBCYWdzXCIsIFwid2VpZ2h0XCI6IDIwLjAsIFwiY2hhbm5lbFwiOiBcIm9ubGluZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiODRjMzJlZjAtNDUxMy0xMWU5LTkzYjUtOTExNjVlMzVhNWU5XCI6IHsgXCJwcmljZVwiOiAyOTk5LCBcInVuaXRcIjogXCJmb3IgNXggNW96IEJhZ3NcIiwgXCJ3ZWlnaHRcIjogMjUuMCwgXCJjaGFubmVsXCI6IFwib25saW5lXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgXCI4OTI2ZDczMC00NTEzLTExZTktOGI4OS04ZjdhMTllOTc3NmFcIjogeyBcInByaWNlXCI6IDM5OTksIFwidW5pdFwiOiBcImZvciA3eCA1b3ogQmFnc1wiLCBcIndlaWdodFwiOiAzNS4wLCBcImNoYW5uZWxcIjogXCJvbmxpbmVcIiB9LFxuICAgICAgICAgICAgICAgICAgICBcIjhkZTNlYTEwLTQ1MTMtMTFlOS04MzM3LWQ3NTVjMGMxOGU0MFwiOiB7IFwicHJpY2VcIjogNDk5OSwgXCJ1bml0XCI6IFwiZm9yIDl4IDVveiBCYWdzXCIsIFwid2VpZ2h0XCI6IDQ1LjAsIFwiY2hhbm5lbFwiOiBcIm9ubGluZVwiIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiZGVmYXVsdFZhcmlhdGlvblwiOiBcIjdjOTlhNTEwLTQ1MTMtMTFlOS04MGEzLTJkNDg4YWU5NTE5M1wiLFxuICAgICAgICAgICAgICAgIFwiZGlzY3JpcHRpb25cIjogXCJTd2VldCBQZWNhbnMgcm9hc3RlZCBhbmQgZ2xhemVkIGluIG91ciB3b3JsZCBmYW1vdXMgc2VjcmV0IHJlY2lwZSBnbGF6ZSAtIHRoZSBwZXJmZWN0IGNvbWJpbmF0aW9uIG9mIHN3ZWV0IHZhbmlsbGEgd2l0aCBhIGhpbnQgb2Ygc2FsdGluZXNzLiBNbW1tbSFcIixcbiAgICAgICAgICAgICAgICBcInN1Z2dlc3Rpb25zXCI6IFwiR3JlYXQgYXMgYSBzdGFuZCBhbG9uZSBzbmFjayBvciBjaG9wIHRoZW0gdXAgYW5kIHVzZSB0aGVtIGFzIGEgdG9wcGluZyBmb3IgaWNlIGNyZWFtLCB5b2d1cnQsIHNhbGFkcyBhbmQgbW9yZSFcIixcbiAgICAgICAgICAgICAgICBcInJ0ZVwiOiBcIlBlY2FucywgU3VnYXIsIFZhbmlsbGEsIFNlYSBTYWx0LlwiLFxuICAgICAgICAgICAgICAgIFwiY2VydGlmaWNhdGlvbnNcIjoge1xuICAgICAgICAgICAgICAgICAgICBcIjAxXCI6XCJWZWdhblwiLFxuICAgICAgICAgICAgICAgICAgICBcIjAyXCI6XCJHbHV0ZW4gRnJlZVwiLFxuICAgICAgICAgICAgICAgICAgICBcIjAzXCI6XCJDb250YWlucyBUcmVlIE51dHNcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJicmFuZExvZ29VcmxcIjogXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL2F3ZS1zd2VldC1hc3NldHMvbG9nb3MvQWgtbnV0c19sb2dvLnBuZ1wiLFxuICAgICAgICAgICAgICAgIFwicHJvZHVjdFNob3RVcmxzXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCIwMVwiOiBcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vYXdlLXN3ZWV0LWFzc2V0cy9wcm9kdWN0cy9TUi1wZWNhbnMtcHMwMS5wbmdcIixcbiAgICAgICAgICAgICAgICAgICAgXCIwMlwiOiBcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vYXdlLXN3ZWV0LWFzc2V0cy9wcm9kdWN0cy9TUi1wZWNhbnMtcHMwMi5wbmdcIixcbiAgICAgICAgICAgICAgICAgICAgXCIwM1wiOiBcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vYXdlLXN3ZWV0LWFzc2V0cy9wcm9kdWN0cy9TUi1wZWNhbnMtcHMwMy5wbmdcIlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJwcm9kdWN0U2hvdEFycmF5XCI6IFtcbiAgICAgICAgICAgICAgICAgICAgXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL2F3ZS1zd2VldC1hc3NldHMvcHJvZHVjdHMvU1ItcGVjYW5zLXBzMDEucG5nXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9hd2Utc3dlZXQtYXNzZXRzL3Byb2R1Y3RzL1NSLXBlY2Fucy1wczAyLnBuZ1wiLFxuICAgICAgICAgICAgICAgICAgICBcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vYXdlLXN3ZWV0LWFzc2V0cy9wcm9kdWN0cy9TUi1wZWNhbnMtcHMwMy5wbmdcIlxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgXCJwcm9kdWN0VGh1bWJzVXJsc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiMDFcIjogXCJodHRwczovL3MzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL2F3ZS1zd2VldC1hc3NldHMvcHJvZHVjdHMvdGh1bWJzL1NSLXBlY2Fucy1wczAzLXRodW1iLnBuZ1wiLFxuICAgICAgICAgICAgICAgICAgICBcIjAyXCI6IFwiaHR0cHM6Ly9zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9hd2Utc3dlZXQtYXNzZXRzL3Byb2R1Y3RzL3RodW1icy9TUi1wZWNhbnMtcHMwMy10aHVtYi5wbmdcIixcbiAgICAgICAgICAgICAgICAgICAgXCIwM1wiOiBcImh0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vYXdlLXN3ZWV0LWFzc2V0cy9wcm9kdWN0cy90aHVtYnMvU1ItcGVjYW5zLXBzMDMtdGh1bWIucG5nXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgfTtcblxuXHQvL3R1cm4gdGhlIG1ldGhvZFxuICAgIHJldHVybiBkYXRhU2VydmljZTtcdFxufTtcblxuIiwiLypcbipcdEZPT1RFUiBESVJFQ1RJVkVcbipcbipcdFRoaXMgbW9kdWxlIGlzIGRlc2lnbmVkIHRvIFxuKi9cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2F3ZXN3ZWV0JylcbiAgICAuZGlyZWN0aXZlKCdmb290ZXJEaXJlY3RpdmUnLCBmb290ZXJEaXJlY3RpdmUpO1xuXG4vKiBAbmdJbmplY3QgKi9cbmZ1bmN0aW9uIGZvb3RlckRpcmVjdGl2ZSgpIHtcblx0Ly9kZWZpbmUgdGhlIGRpcmVjdGl2ZVxuXHR2YXIgZGlyZWN0aXZlID0ge1xuXHRcdHJlc3RyaWN0OiBcIkFFQ01cIixcblx0XHR0ZW1wbGF0ZVVybDogJ3ZpZXdzL2RpcmVjdGl2ZXMvZm9vdGVyLXZpZXcuZGlyZWN0aXZlLmh0bScsXG5cdFx0cmVwbGFjZTogdHJ1ZSxcblx0XHRzY29wZToge1xuXHRcdH0sXG5cdFx0bGluazogbGlua0Z1bmMsXG5cdFx0Y29udHJvbGxlcjogZm9vdGVyRGlyZWN0aXZlQ29udHJvbGxlcixcblx0XHRjb250cm9sbGVyQXM6ICd2bScsXG5cdFx0YmluZFRvQ29udHJvbGxlcjogdHJ1ZVxuXHR9XG5cblx0LyogQG5nSW5qZWN0ICovXG5cdGZ1bmN0aW9uIGxpbmtGdW5jKHNjb3BlLCBlbCwgYXR0ciwgY3RybCkge31cblxuXHRmb290ZXJEaXJlY3RpdmVDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsICckbG9nJ107XG5cdFxuXHQvKiBAbmdJbmplY3QgKi9cblx0ZnVuY3Rpb24gZm9vdGVyRGlyZWN0aXZlQ29udHJvbGxlcigkc2NvcGUsICRsb2cpIHtcblx0XHQvL1x0REVGSU5FIExPQ0FMIFZBUklBQkxFU1xuXHRcdHZhciB2bSA9IHRoaXM7XG5cblx0XHQvL1x0REVGSU5FIFZJRVcgTU9ERUwgVkFSSUFCTEVTXG5cblxuXHRcdC8vXHRSRVBPUlQgUFJPR1JFU1Ncblx0XHQkbG9nLmluZm8oJ2luIGZvb3RlciBkaXJlY3RpdmUgY29udHJvbGxlcicpO1xuXHR9XG5cblx0Ly9wYXNzIGl0IGJhY2tcblx0cmV0dXJuIGRpcmVjdGl2ZTtcbn1cbiIsIi8qXG4qXHRGT09URVIgRElSRUNUSVZFXG4qXG4qXHRUaGlzIG1vZHVsZSBpcyBkZXNpZ25lZCB0byBcbiovXG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdhd2Vzd2VldCcpXG4gICAgLmRpcmVjdGl2ZSgnbGFuZGluZ0NoYW5uZWxzQmFubmVyRGlyZWN0aXZlJywgbGFuZGluZ0NoYW5uZWxzQmFubmVyRGlyZWN0aXZlKTtcblxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBsYW5kaW5nQ2hhbm5lbHNCYW5uZXJEaXJlY3RpdmUoKSB7XG5cdC8vZGVmaW5lIHRoZSBkaXJlY3RpdmVcblx0dmFyIGRpcmVjdGl2ZSA9IHtcblx0XHRyZXN0cmljdDogXCJBRUNNXCIsXG5cdFx0dGVtcGxhdGVVcmw6ICd2aWV3cy9kaXJlY3RpdmVzL2xhbmRpbmdDaGFubmVsc0Jhbm5lci12aWV3LmRpcmVjdGl2ZS5odG0nLFxuXHRcdHJlcGxhY2U6IHRydWUsXG5cdFx0c2NvcGU6IHtcblx0XHR9LFxuXHRcdGxpbms6IGxpbmtGdW5jLFxuXHRcdGNvbnRyb2xsZXI6IGxhbmRpbmdDaGFubmVsc0Jhbm5lckRpcmVjdGl2ZUNvbnRyb2xsZXIsXG5cdFx0Y29udHJvbGxlckFzOiAndm0nLFxuXHRcdGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcblx0fVxuXG5cdC8qIEBuZ0luamVjdCAqL1xuXHRmdW5jdGlvbiBsaW5rRnVuYyhzY29wZSwgZWwsIGF0dHIsIGN0cmwpIHt9XG5cblx0bGFuZGluZ0NoYW5uZWxzQmFubmVyRGlyZWN0aXZlQ29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCAnJGxvZyddO1xuXHRcblx0LyogQG5nSW5qZWN0ICovXG5cdGZ1bmN0aW9uIGxhbmRpbmdDaGFubmVsc0Jhbm5lckRpcmVjdGl2ZUNvbnRyb2xsZXIoJHNjb3BlLCAkbG9nKSB7XG5cdFx0Ly9cdERFRklORSBMT0NBTCBWQVJJQUJMRVNcblx0XHR2YXIgdm0gPSB0aGlzO1xuXG5cdFx0Ly9cdERFRklORSBWSUVXIE1PREVMIFZBUklBQkxFU1xuXG5cblx0XHQvL1x0UkVQT1JUIFBST0dSRVNTXG5cdFx0JGxvZy5pbmZvKCdpbiBsYW5kaW5nIGNoYW5uZWxzIGJhbm5lciBkaXJlY3RpdmUgY29udHJvbGxlcicpO1xuXHR9XG5cblx0Ly9wYXNzIGl0IGJhY2tcblx0cmV0dXJuIGRpcmVjdGl2ZTtcbn1cbiIsIi8qXG4qXHRGT09URVIgRElSRUNUSVZFXG4qXG4qXHRUaGlzIG1vZHVsZSBpcyBkZXNpZ25lZCB0byBcbiovXG5cbmFuZ3VsYXJcbiAgICAubW9kdWxlKCdhd2Vzd2VldCcpXG4gICAgLmRpcmVjdGl2ZSgnbGFuZGluZ0hlcm9CYW5uZXJEaXJlY3RpdmUnLCBsYW5kaW5nSGVyb0Jhbm5lckRpcmVjdGl2ZSk7XG5cbi8qIEBuZ0luamVjdCAqL1xuZnVuY3Rpb24gbGFuZGluZ0hlcm9CYW5uZXJEaXJlY3RpdmUoKSB7XG5cdC8vZGVmaW5lIHRoZSBkaXJlY3RpdmVcblx0dmFyIGRpcmVjdGl2ZSA9IHtcblx0XHRyZXN0cmljdDogXCJBRUNNXCIsXG5cdFx0dGVtcGxhdGVVcmw6ICd2aWV3cy9kaXJlY3RpdmVzL2xhbmRpbmdIZXJvQmFubmVyLXZpZXcuZGlyZWN0aXZlLmh0bScsXG5cdFx0cmVwbGFjZTogdHJ1ZSxcblx0XHRzY29wZToge1xuXHRcdH0sXG5cdFx0bGluazogbGlua0Z1bmMsXG5cdFx0Y29udHJvbGxlcjogbGFuZGluZ0hlcm9CYW5uZXJEaXJlY3RpdmVDb250cm9sbGVyLFxuXHRcdGNvbnRyb2xsZXJBczogJ3ZtJyxcblx0XHRiaW5kVG9Db250cm9sbGVyOiB0cnVlXG5cdH1cblxuXHQvKiBAbmdJbmplY3QgKi9cblx0ZnVuY3Rpb24gbGlua0Z1bmMoc2NvcGUsIGVsLCBhdHRyLCBjdHJsKSB7fVxuXG5cdGxhbmRpbmdIZXJvQmFubmVyRGlyZWN0aXZlQ29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCAnJGxvZyddO1xuXHRcblx0LyogQG5nSW5qZWN0ICovXG5cdGZ1bmN0aW9uIGxhbmRpbmdIZXJvQmFubmVyRGlyZWN0aXZlQ29udHJvbGxlcigkc2NvcGUsICRsb2cpIHtcblx0XHQvL1x0REVGSU5FIExPQ0FMIFZBUklBQkxFU1xuXHRcdHZhciB2bSA9IHRoaXM7XG5cblx0XHQvL1x0REVGSU5FIFZJRVcgTU9ERUwgVkFSSUFCTEVTXG5cblxuXHRcdC8vXHRSRVBPUlQgUFJPR1JFU1Ncblx0XHQkbG9nLmluZm8oJ2luIGxhbmRpbmcgaGVybyBiYW5uZXIgZGlyZWN0aXZlIGNvbnRyb2xsZXInKTtcblx0fVxuXG5cdC8vcGFzcyBpdCBiYWNrXG5cdHJldHVybiBkaXJlY3RpdmU7XG59XG4iLCIvKlxuKlx0Rk9PVEVSIERJUkVDVElWRVxuKlxuKlx0VGhpcyBtb2R1bGUgaXMgZGVzaWduZWQgdG8gXG4qL1xuXG5hbmd1bGFyXG4gICAgLm1vZHVsZSgnYXdlc3dlZXQnKVxuICAgIC5kaXJlY3RpdmUoJ2xhbmRpbmdSZXZpZXdzU2xpZGVyRGlyZWN0aXZlJywgbGFuZGluZ1Jldmlld3NTbGlkZXJEaXJlY3RpdmUpO1xuXG4vKiBAbmdJbmplY3QgKi9cbmZ1bmN0aW9uIGxhbmRpbmdSZXZpZXdzU2xpZGVyRGlyZWN0aXZlKCkge1xuXHQvL2RlZmluZSB0aGUgZGlyZWN0aXZlXG5cdHZhciBkaXJlY3RpdmUgPSB7XG5cdFx0cmVzdHJpY3Q6IFwiQUVDTVwiLFxuXHRcdHRlbXBsYXRlVXJsOiAndmlld3MvZGlyZWN0aXZlcy9sYW5kaW5nUmV2aWV3c1NsaWRlci12aWV3LmRpcmVjdGl2ZS5odG0nLFxuXHRcdHJlcGxhY2U6IHRydWUsXG5cdFx0c2NvcGU6IHtcblx0XHR9LFxuXHRcdGxpbms6IGxpbmtGdW5jLFxuXHRcdGNvbnRyb2xsZXI6IGxhbmRpbmdSZXZpZXdzU2xpZGVyRGlyZWN0aXZlQ29udHJvbGxlcixcblx0XHRjb250cm9sbGVyQXM6ICd2bScsXG5cdFx0YmluZFRvQ29udHJvbGxlcjogdHJ1ZVxuXHR9XG5cblx0LyogQG5nSW5qZWN0ICovXG5cdGZ1bmN0aW9uIGxpbmtGdW5jKHNjb3BlLCBlbCwgYXR0ciwgY3RybCkge31cblxuXHRsYW5kaW5nUmV2aWV3c1NsaWRlckRpcmVjdGl2ZUNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHNjb3BlJywgJyRsb2cnXTtcblx0XG5cdC8qIEBuZ0luamVjdCAqL1xuXHRmdW5jdGlvbiBsYW5kaW5nUmV2aWV3c1NsaWRlckRpcmVjdGl2ZUNvbnRyb2xsZXIoJHNjb3BlLCAkbG9nKSB7XG5cdFx0Ly9cdERFRklORSBMT0NBTCBWQVJJQUJMRVNcblx0XHR2YXIgdm0gPSB0aGlzO1xuXG5cdFx0Ly9cdERFRklORSBWSUVXIE1PREVMIFZBUklBQkxFU1xuXG5cblx0XHQvL1x0UkVQT1JUIFBST0dSRVNTXG5cdFx0JGxvZy5pbmZvKCdpbiBsYW5kaW5nIHJldmlld3Mgc2xpZGVyIGRpcmVjdGl2ZSBjb250cm9sbGVyJyk7XG5cdH1cblxuXHQvL3Bhc3MgaXQgYmFja1xuXHRyZXR1cm4gZGlyZWN0aXZlO1xufVxuIiwiLypcbipcdENVU1RPTUVSIExJU1RcbipcbipcdFRoaXMgbW9kdWxlIGlzIGRlc2lnbmVkIHRvIFxuKi9cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ2F3ZXN3ZWV0JylcbiAgICAuZGlyZWN0aXZlKCduYXZiYXJEaXJlY3RpdmUnLCBuYXZiYXJEaXJlY3RpdmUpO1xuXG4vKiBAbmdJbmplY3QgKi9cbmZ1bmN0aW9uIG5hdmJhckRpcmVjdGl2ZSgpIHtcblx0Ly9kZWZpbmUgdGhlIGRpcmVjdGl2ZVxuXHR2YXIgZGlyZWN0aXZlID0ge1xuXHRcdHJlc3RyaWN0OiBcIkFFQ01cIixcblx0XHR0ZW1wbGF0ZVVybDogJ3ZpZXdzL2RpcmVjdGl2ZXMvbmF2YmFyLXZpZXcuZGlyZWN0aXZlLmh0bScsXG5cdFx0cmVwbGFjZTogdHJ1ZSxcblx0XHRzY29wZToge1xuXHRcdH0sXG5cdFx0bGluazogbGlua0Z1bmMsXG5cdFx0Y29udHJvbGxlcjogbmF2YmFyRGlyZWN0aXZlQ29udHJvbGxlcixcblx0XHRjb250cm9sbGVyQXM6ICd2bScsXG5cdFx0YmluZFRvQ29udHJvbGxlcjogdHJ1ZVxuXHR9XG5cblx0LyogQG5nSW5qZWN0ICovXG5cdGZ1bmN0aW9uIGxpbmtGdW5jKHNjb3BlLCBlbCwgYXR0ciwgY3RybCkge31cblxuXHRuYXZiYXJEaXJlY3RpdmVDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsICckbG9nJ107XG5cdFxuXHQvKiBAbmdJbmplY3QgKi9cblx0ZnVuY3Rpb24gbmF2YmFyRGlyZWN0aXZlQ29udHJvbGxlcigkc2NvcGUsICRsb2cpIHtcblx0XHQvL1x0REVGSU5FIExPQ0FMIFZBUklBQkxFU1xuXHRcdHZhciB2bSA9IHRoaXM7XG5cblx0XHQvL1x0REVGSU5FIFZJRVcgTU9ERUwgVkFSSUFCTEVTXG5cdFx0dm0uaXNOYXZDb2xsYXBzZWQgPSB0cnVlO1xuXHRcdHZtLmlzQ29sbGFwc2VkID0gZmFsc2U7XG5cdFx0dm0uaXNDb2xsYXBzZWRIb3Jpem9udGFsID0gZmFsc2U7XG5cblx0XHQvL1x0UkVQT1JUIFBST0dSRVNTXG5cdFx0JGxvZy5pbmZvKCdpbiBuYXZiYXIgZGlyZWN0aXZlIGNvbnRyb2xsZXInKTtcblx0fVxuXG5cdC8vcGFzcyBpdCBiYWNrXG5cdHJldHVybiBkaXJlY3RpdmU7XG59XG4iLCIvKlxuKlx0Q1VTVE9NRVIgTElTVFxuKlxuKlx0VGhpcyBtb2R1bGUgaXMgZGVzaWduZWQgdG8gXG4qL1xuXG5hbmd1bGFyXG4gICAgLm1vZHVsZSgnYXdlc3dlZXQnKVxuICAgIC5kaXJlY3RpdmUoJ3RlbXBsYXRlUHJvZHVjdERpcmVjdGl2ZScsIHRlbXBsYXRlUHJvZHVjdERpcmVjdGl2ZSk7XG5cbi8qIEBuZ0luamVjdCAqL1xuZnVuY3Rpb24gdGVtcGxhdGVQcm9kdWN0RGlyZWN0aXZlKCkge1xuXHQvL2RlZmluZSB0aGUgZGlyZWN0aXZlXG5cdHZhciBkaXJlY3RpdmUgPSB7XG5cdFx0cmVzdHJpY3Q6IFwiQUVDTVwiLFxuXHRcdHRlbXBsYXRlVXJsOiAndmlld3MvZGlyZWN0aXZlcy90ZW1wbGF0ZVByb2R1Y3Qtdmlldy5kaXJlY3RpdmUuaHRtJyxcblx0XHRyZXBsYWNlOiB0cnVlLFxuXHRcdHNjb3BlOiB7XG5cdFx0fSxcblx0XHRsaW5rOiBsaW5rRnVuYyxcblx0XHRjb250cm9sbGVyOiB0ZW1wbGF0ZVByb2R1Y3REaXJlY3RpdmVDb250cm9sbGVyLFxuXHRcdGNvbnRyb2xsZXJBczogJ3ZtJyxcblx0XHRiaW5kVG9Db250cm9sbGVyOiB0cnVlXG5cdH1cblxuXHQvKiBAbmdJbmplY3QgKi9cblx0ZnVuY3Rpb24gbGlua0Z1bmMoc2NvcGUsIGVsLCBhdHRyLCBjdHJsKSB7fVxuXG5cdHRlbXBsYXRlUHJvZHVjdERpcmVjdGl2ZUNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHNjb3BlJywgJyRsb2cnLCAnJHJvdXRlUGFyYW1zJywgJ2RhdGFTZXJ2aWNlJ107XG5cdFxuXHQvKiBAbmdJbmplY3QgKi9cblx0ZnVuY3Rpb24gdGVtcGxhdGVQcm9kdWN0RGlyZWN0aXZlQ29udHJvbGxlcigkc2NvcGUsICRsb2csICRyb3V0ZVBhcmFtcywgZGF0YVNlcnZpY2UpIHtcbiAgICAgICAgXG4gICAgICAgIC8vICBERUZJTkUgTE9DQUwgVkFSSUFCTEVTXG4gICAgICAgIHZhciB2bSA9IHRoaXM7XG4gICAgICAgIHZhciBjdXJySW5kZXggPSAwO1xuXG4gICAgICAgIC8vICBERUZJTkUgVklFVyBNT0RFTCBWQVJJQUJMRVNcbiAgICAgICAgLy92bS5wcm9kdWN0SWQgPSAnNzE5NTIwYjAtNDUxMS0xMWU5LWI2MzMtMTE0ZTBkODRmODhiJztcbiAgICAgICAgdm0ucHJvZHVjdE1vZGVsID0gZGF0YVNlcnZpY2UuR0VUcHJvZHVjdERhdGEoJHJvdXRlUGFyYW1zLnByb2R1Y3RJZCk7XG4gICAgICAgIHZtLnNlbGVjdGVkVmFyaWFudCA9IHZtLnByb2R1Y3RNb2RlbC5kZWZhdWx0VmFyaWF0aW9uO1xuICAgICAgICB2bS5zbGlkZXMgPSBbXTtcblx0XHRcblxuICAgICAgICBjb25zb2xlLmxvZygnaW4gdGVtcGxhdGUgcHJvZHVjdCBkaXJlY3RpdmUgY29udHJvbGxlcicsIHZtLnByb2R1Y3RJZCk7XG4gICAgICAgICRsb2cuaW5mbygncHJvZHVjdCBtb2RlbCcsIHZtLnByb2R1Y3RNb2RlbCwgdm0uc2xpZGVzKTtcbiAgICAgICAgXG4gICAgICAgIGZ1bmN0aW9uIGFkZFNsaWRlKHVybCkge1xuXHRcdFxuICAgICAgICAgICAgdm0uc2xpZGVzLnB1c2goe1xuICAgICAgICAgICAgICBpbWFnZTogdXJsLFxuICAgICAgICAgICAgICB0ZXh0OiAnanVzdCBhIHRlc3QnLFxuICAgICAgICAgICAgICBpZDogY3VyckluZGV4KytcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIFxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDM7IGkrKykge1xuICAgICAgICAgICAgYWRkU2xpZGUodm0ucHJvZHVjdE1vZGVsLnByb2R1Y3RTaG90QXJyYXlbaV0pO1xuICAgICAgICB9XG5cdH1cblxuXHQvL3Bhc3MgaXQgYmFja1xuXHRyZXR1cm4gZGlyZWN0aXZlO1xufSIsIi8qXG4qXHRST1VURVMtQ09ORklHXG4qXG4qXHRUaGlzIG1vZHVsZSBzZXRzIHVwIGFsbCB0aGUgcmVxdWlyZWQgYW5ndWxhciByb3V0ZXMgZm9yIHRoaXMgd2ViIGFwcC5cbiovXG5hbmd1bGFyXG4gICAgLm1vZHVsZSgnYXdlc3dlZXQnKVxuICAgIC5jb25maWcoY29uZmlnKTtcblxuLyogQG5nSW5qZWN0ICovXG5mdW5jdGlvbiBjb25maWcoJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XG5cdCRsb2NhdGlvblByb3ZpZGVyLmhhc2hQcmVmaXgoJycpO1xuICAgICRyb3V0ZVByb3ZpZGVyXG5cblx0Ly9QVUJMSUMgUk9VVEVTXG4gICAgLndoZW4oJy8nLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvbGFuZGluZy1wYWdlLmh0bScsICAgICAgIC8vICBMYW5kaW5nIFBhZ2UgVmlld1xuICAgICAgICBjb250cm9sbGVyOiAnbGFuZGluZ1BhZ2VDb250cm9sbGVyJywgICAgICAgIC8vICBMYW5kaW5nIFBhZ2UgQ29udHJvbGxlclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICB9KVxuICAgIC53aGVuKCcvcHJvZHVjdHMnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvZHVjdHMtcGFnZS5odG0nLCAgICAgIC8vICBQcm9kdWN0IFBhZ2UgVmlld1xuICAgICAgICBjb250cm9sbGVyOiAncHJvZHVjdFBhZ2VDb250cm9sbGVyJywgICAgICAgIC8vICBQcm9kdWN0IFBhZ2UgQ29udHJvbGxlclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICB9KVxuICAgIC53aGVuKCcvcHJvZHVjdHMvOnByb2R1Y3ROYW1lLzpwcm9kdWN0SWQnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvZHVjdHMtcGFnZS5odG0nLCAgICAgIC8vICBQcm9kdWN0IFBhZ2UgVmlldyB3aXRoIGEgcHJvZHVjdCBJZCAmIHZhcmllbnQgSWRcbiAgICAgICAgY29udHJvbGxlcjogJ3Byb2R1Y3RQYWdlQ29udHJvbGxlcicsICAgICAgICAvLyAgUHJvZHVjdCBQYWdlIENvbnRyb2xsZXJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nXG4gICAgfSlcbiAgICAud2hlbignL3Byb2R1Y3RzLzpwcm9kdWN0SWQnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvZHVjdHMtcGFnZS5odG0nLCAgICAgIC8vICBQcm9kdWN0IFBhZ2UgVmlldyB3aXRoIGEgcHJvZHVjdCBJZFxuICAgICAgICBjb250cm9sbGVyOiAncHJvZHVjdFBhZ2VDb250cm9sbGVyJywgICAgICAgIC8vICBQcm9kdWN0IFBhZ2UgQ29udHJvbGxlclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICB9KVxuICAgIC53aGVuKCcvcHJpY2luZycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wcmljaW5nLXBhZ2UuaHRtJywgICAgICAgLy8gIFByaWNpbmcgUGFnZSBWaWV3XG4gICAgICAgIGNvbnRyb2xsZXI6ICdwcmljaW5nUGFnZUNvbnRyb2xsZXInLCAgICAgICAgLy8gIFByaWNpbmcgUGFnZSBDb250cm9sbGVyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJ1xuICAgIH0pXG4gICAgLndoZW4oJy9zdG9yeScsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9zdG9yeS1wYWdlLmh0bScsICAgICAgICAgLy8gIFN0b3J5IFBhZ2UgVmlld1xuICAgICAgICBjb250cm9sbGVyOiAnc3RvcnlQYWdlQ29udHJvbGxlcicsICAgICAgICAgIC8vICBTdG9yeSBQYWdlIENvbnRyb2xsZXJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nXG4gICAgfSlcbiAgICAud2hlbignL2NoYW5uZWxzJywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2NoYW5uZWxzLXBhZ2UuaHRtJywgICAgICAvLyAgQ2hhbm5lbHMgUGFnZSBWaWV3XG4gICAgICAgIGNvbnRyb2xsZXI6ICdjaGFubmVsc1BhZ2VDb250cm9sbGVyJywgICAgICAgLy8gIENoYW5uZWxzIFBhZ2UgQ29udHJvbGxlclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICB9KVxuICAgIC53aGVuKCcvY2hhbm5lbHMvOmNoYW5uZWxJZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9jaGFubmVscy1wYWdlLmh0bScsICAgICAgLy8gIENoYW5uZWxzIFBhZ2UgVmlldyAmIENoYW5uZWwgSWRcbiAgICAgICAgY29udHJvbGxlcjogJ2NoYW5uZWxzUGFnZUNvbnRyb2xsZXInLCAgICAgICAvLyAgQ2hhbm5lbHMgUGFnZSBDb250cm9sbGVyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJ1xuICAgIH0pXG4gICAgLndoZW4oJy9zdXBwb3J0Jywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL3N1cHBvcnQtcGFnZS5odG0nLCAgICAgICAvLyAgU3VwcG9ydCBQYWdlIFZpZXdcbiAgICAgICAgY29udHJvbGxlcjogJ3N1cHBvcnRQYWdlQ29udHJvbGxlcicsICAgICAgICAvLyAgU3VwcG9ydCBQYWdlIENvbnRyb2xsZXJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nXG4gICAgfSlcbiAgICAud2hlbignL3Jldmlld3MnLCB7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcmV2aWV3cy1wYWdlLmh0bScsICAgICAgIC8vICBSZXZpZXdzIFBhZ2UgVmlld1xuICAgICAgICBjb250cm9sbGVyOiAncmV2aWV3c1BhZ2VDb250cm9sbGVyJywgICAgICAgIC8vICBSZXZpZXdzIFBhZ2UgQ29udHJvbGxlclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICB9KVxuICAgIC53aGVuKCcvam9icycsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9qb2JzLXBhZ2UuaHRtJywgICAgICAgICAgLy8gIEpvYnMgUGFnZSBWaWV3XG4gICAgICAgIGNvbnRyb2xsZXI6ICdqb2JzUGFnZUNvbnRyb2xsZXInLCAgICAgICAgICAgLy8gIEpvYnMgUGFnZSBDb250cm9sbGVyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJ1xuICAgIH0pXG4gICAgLndoZW4oJy9jYXJ0Jywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2NhcnQtcGFnZS5odG0nLCAgICAgICAgICAvLyAgQ2FydCBQYWdlIFZpZXdcbiAgICAgICAgY29udHJvbGxlcjogJ2NhcnRQYWdlQ29udHJvbGxlcicsICAgICAgICAgICAvLyAgQ2FydCBQYWdlIENvbnRyb2xsZXJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nXG4gICAgfSlcbiAgICAud2hlbignL2NoZWNrb3V0Jywge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2NoZWNrb3V0LXBhZ2UuaHRtJywgICAgICAvLyAgQ2hlY2tvdXQgUGFnZSBWaWV3XG4gICAgICAgIGNvbnRyb2xsZXI6ICdjaGVja291dFBhZ2VDb250cm9sbGVyJywgICAgICAgLy8gIENoZWNrb3V0IFBhZ2UgQ29udHJvbGxlclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICB9KVxuICAgIC53aGVuKCcvY2hlY2tvdXQvOnNlc3Npb25JZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9jaGVja291dC1wYWdlLmh0bScsICAgICAgLy8gIENoZWNrb3V0IFBhZ2UgVmlldyAmIFNlc3Npb24gSWRcbiAgICAgICAgY29udHJvbGxlcjogJ2NoZWNrb3V0UGFnZUNvbnRyb2xsZXInLCAgICAgICAvLyAgQ2hlY2tvdXQgUGFnZSBDb250cm9sbGVyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJ1xuICAgIH0pXG4gICAgLndoZW4oJy9jaGVja291dC86c2Vzc2lvbklkLzp0aWNrZXRJZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9jaGVja291dC1wYWdlLmh0bScsICAgICAgLy8gIENoZWNrb3V0IFBhZ2UgVmlldyAmIFNlc3Npb24gSWQgJiBUaWNrZXQgSWRcbiAgICAgICAgY29udHJvbGxlcjogJ2NoZWNrb3V0UGFnZUNvbnRyb2xsZXInLCAgICAgICAvLyAgQ2hlY2tvdXQgUGFnZSBDb250cm9sbGVyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJ1xuICAgIH0pXG4gICAgLndoZW4oJy9sb2dpbicsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9sb2dpbi1wYWdlLmh0bScsICAgICAgICAgLy8gIExvZ2luIFBhZ2UgVmlld1xuICAgICAgICBjb250cm9sbGVyOiAnbG9naW5QYWdlQ29udHJvbGxlcicsICAgICAgICAgIC8vICBMb2dpbiBQYWdlIENvbnRyb2xsZXJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nXG4gICAgfSlcbiAgICAud2hlbignL2Rhc2hib2FyZCcsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9kYXNoYm9hcmQtcGFnZS5odG0nLCAgICAgLy8gIERhc2hib2FyZCBQYWdlIFZpZXdcbiAgICAgICAgY29udHJvbGxlcjogJ2Rhc2hib2FyZFBhZ2VDb250cm9sbGVyJywgICAgICAvLyAgRGFzaGJvYXJkIFBhZ2UgQ29udHJvbGxlclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICB9KVxuICAgIC53aGVuKCcvdGVhbScsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy90ZWFtLXBhZ2UuaHRtJywgICAgIC8vICBUZWFtIFBhZ2UgVmlld1xuICAgICAgICBjb250cm9sbGVyOiAndGVhbVBhZ2VDb250cm9sbGVyJywgICAgICAvLyAgVGVhbSBQYWdlIENvbnRyb2xsZXJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nXG4gICAgfSlcbiAgICAud2hlbignL3RlYW0vY2hlY2tsaXN0cy86dHlwZScsIHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy90ZWFtQ2hlY2tsaXN0cy1wYWdlLmh0bScsICAgICAvLyAgVGVhbSBQYWdlIFZpZXdcbiAgICAgICAgY29udHJvbGxlcjogJ3RlYW1DaGVja2xpc3RzUGFnZUNvbnRyb2xsZXInLCAgICAgIC8vICBUZWFtIFBhZ2UgQ29udHJvbGxlclxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICB9KVxuXHQub3RoZXJ3aXNlKHtcbiAgICAgICAgcmVkaXJlY3RUbzogJy8nXG4gICAgfSk7XG59XG5cbi8qXG4qICAgUkVRVUlSRUQgRlVOQ1RJT05TXG4qXG4qL1xuXG5cbiJdfQ==
